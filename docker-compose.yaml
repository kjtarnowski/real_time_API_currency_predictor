version: '3.4'

services:

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "9672:5672"
    restart: on-failure

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main
    ports:
      - "9432:5432"
    restart: on-failure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  app:
    build: .
    shm_size: '512mb'
    command: python manage.py runserver 0.0.0.0:8000
    container_name: app
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8000:8000"
    hostname: app
    image: app-image
    networks:
      - main
    restart: on-failure
    volumes:
      - .:/usr/src/app



  celery_worker:
    command: ./run_celery.sh 
    container_name: celery_worker
    depends_on:
      - app
      - postgres
      - rabbitmq
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    hostname: celery_worker
    image: app-image
    networks:
      - main
    restart: on-failure
    volumes:
      - .:/usr/src/app

  celery_beat:
    command: ./run_celery_beat.sh
    container_name: celery_beat
    depends_on:
      - app
      - postgres
      - rabbitmq
    hostname: celery_beat
    image: app-image
    networks:
      - main
    restart: on-failure
    volumes:
      - .:/usr/src/app

networks:
  main:

volumes:
  postgresql-data:

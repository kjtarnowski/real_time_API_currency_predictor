"""
Django settings for real_time_API_currency_predictor project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

from ray import tune

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from real_time_API_currency_predictor.currency_predictor.ML_predictor_utils import create_model, \
    optimize_hyperparameters, train_model

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0t(_)+!6kr=wy&p^&9j2drjlzg+fg)twl(@@*3snn000yx1+q('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_celery_beat',
    'django_celery_results',
    #app
    'currency_predictor'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'real_time_API_currency_predictor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'real_time_API_currency_predictor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'postgres',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

CELERY_BROKER_URL = 'pyamqp://rabbitmq:5672'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_BEAT_SCHEDULE = {
    'predict_and_get_currency_data_from_API_dollar': {
        'task': 'predict_and_get_currency_data_from_API_dollar',
        'schedule': 60
    },
    'fit_time_series_model_dollar': {
        'task': 'fit_time_series_model_dollar',
        'schedule': 900,
    },
    'optimize_time_series_model_dollar': {
        'task': 'optimize_time_series_model_dollar',
        'schedule': 3780,
    },

    'predict_and_get_currency_data_from_API_pound': {
        'task': 'predict_and_get_currency_data_from_API_pound',
        'schedule': 60
    },
    'fit_time_series_model_pound': {
        'task': 'fit_time_series_model_pound',
        'schedule': 900,
    },
    'optimize_time_series_model_pound': {
        'task': 'optimize_time_series_model_pound',
        'schedule': 3780,
    },
}

URL = "https://www.freeforexapi.com/api/live?pairs="
SEARCH_SPACE = {
        "gru_units": tune.choice(list(range(20, 120))),
        "rec_dropout": tune.uniform(0.0, 0.4),
        "batch_size": tune.choice([8, 12, 16, 20, 24])
    }

TRAINING_PARAMETER_LIST = ["batch_size"]
BASED_HYPERFILE_FILE_NAME = "_current_optimized_hyerparams.json"
BASED_SCALE_FILE_NAME = '_scaler.pkl'
BASED_MODEL_ARCH_FILE_NAME = "_current_model_architecture.json"
BASED_MODEL_WEIGHTS_FILE_NAME = "_current_model_weights.h5"

CURRENCY_PREDICTOR_COMMON_DICT = {
    'n_points_model': 180,
    'n_points_training': 120,
    'n_steps': 10,
    'create_model': create_model,
    'train_model': train_model,
    'optimize_hyperparameters': optimize_hyperparameters,
    'search_space': SEARCH_SPACE,
    'model_kwargs_str': '{"gru_units": config["gru_units"],"rec_dropout": config["rec_dropout"]}',
    'training_paramters_list': TRAINING_PARAMETER_LIST,
    'epochs': 100,
    'num_samples_optim': 5,
    'random_seed': 42,
    'model_path': "forexAPI/current_model/",
    'pred_fit_optim_time_offset_tuple': (12, 10, 5),
    'trials_to_get_data_from_API': 3,
    'prediction_step': 1,
    'currency_field_name': 'rate',
    'currency_field_name_pred': 'rate_pred',
}